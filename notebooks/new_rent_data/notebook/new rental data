{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.7-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python38764bitvenvvenv519d74b5c1cf42cc8042e0d0f7cb4d2e",
   "display_name": "Python 3.8.7 64-bit ('.venv': venv)",
   "language": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": [
      "/home/primefactorx01/lambda/labs/labspt15-cityspire-g-ds\n"
     ]
    }
   ],
   "source": [
    "!pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pathlib import Path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "path = Path('notebooks/new_rent_data/2021.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "dataf = pd.read_excel(path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "                                    areaname21 state_alpha  rent50_2\n",
       "0                              Abilene, TX MSA          TX      1028\n",
       "1     Aguadilla-Isabela, PR HUD Metro FMR Area          PR       472\n",
       "2      Utuado Municipio, PR HUD Metro FMR Area          PR       444\n",
       "3                                Akron, OH MSA          OH       911\n",
       "4                               Albany, GA MSA          GA       814\n",
       "...                                        ...         ...       ...\n",
       "2592                  Northern Mariana Islands          MP       826\n",
       "2593             Puerto Rico HUD Nonmetro Area          PR       450\n",
       "2594                      St. Croix Island, VI          VI      1154\n",
       "2595                       St. John Island, VI          VI      1812\n",
       "2596                     St. Thomas Island, VI          VI      1307\n",
       "\n",
       "[2597 rows x 3 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>areaname21</th>\n      <th>state_alpha</th>\n      <th>rent50_2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Abilene, TX MSA</td>\n      <td>TX</td>\n      <td>1028</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Aguadilla-Isabela, PR HUD Metro FMR Area</td>\n      <td>PR</td>\n      <td>472</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Utuado Municipio, PR HUD Metro FMR Area</td>\n      <td>PR</td>\n      <td>444</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Akron, OH MSA</td>\n      <td>OH</td>\n      <td>911</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Albany, GA MSA</td>\n      <td>GA</td>\n      <td>814</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2592</th>\n      <td>Northern Mariana Islands</td>\n      <td>MP</td>\n      <td>826</td>\n    </tr>\n    <tr>\n      <th>2593</th>\n      <td>Puerto Rico HUD Nonmetro Area</td>\n      <td>PR</td>\n      <td>450</td>\n    </tr>\n    <tr>\n      <th>2594</th>\n      <td>St. Croix Island, VI</td>\n      <td>VI</td>\n      <td>1154</td>\n    </tr>\n    <tr>\n      <th>2595</th>\n      <td>St. John Island, VI</td>\n      <td>VI</td>\n      <td>1812</td>\n    </tr>\n    <tr>\n      <th>2596</th>\n      <td>St. Thomas Island, VI</td>\n      <td>VI</td>\n      <td>1307</td>\n    </tr>\n  </tbody>\n</table>\n<p>2597 rows Ã— 3 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 20
    }
   ],
   "source": [
    "dataf[['areaname21','state_alpha', 'rent50_2']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dirpath = Path('notebooks/new_rent_data')\n",
    "# dfs = []\n",
    "# default = ['Areaname', 'state_alpha', 'Rent50_2']\n",
    "# col_names = {\n",
    "#     '2003.xls': ['msaname', 'State_Alpha', 'rent50_2'],\n",
    "#     '2004.xls': ['MSAName', 'State_Alpha', 'Rent50_2'],\n",
    "#     '2005.xls': ['MSAName', 'State_Alpha', 'Rent50_2Bed'],\n",
    "#     '2006.xls': ['areaname', 'state_alpha', 'Rent50_2'],\n",
    "#     '2007.xls': ['areaname', 'state_alpha', 'Rent50_2'],\n",
    "#     '2008.xls': ['Areaname', 'state_alpha', 'Rent50_2'],\n",
    "#     '2016.xlsx': ['areaname', 'state_alpha', 'Rent50_2'],\n",
    "#     '2017.xlsx': ['areaname', 'state_alpha', 'Rent50_2'],\n",
    "#     '2018.xlsx': ['areaname18', 'state_alpha', 'rent50_2'],\n",
    "#     '2019.xlsx': ['areaname19', 'state_alpha', 'rent50_2'],\n",
    "# }\n",
    "# pd.read_excel('notebooks/new_rent_data/2019.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_excel('notebooks/new_rent_data/2021.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['areaname21'] = df['areaname21'].str.split(',', expand=True)[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[['areaname21','state_alpha', 'rent50_2']].rename(columns={'areaname21':'City','state_alpha':'State', 'rent50_2': 'Rent'})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[df['City'].str.contains('-'), 'City'] = df.loc[df['City'].str.contains('-'), 'City'].str.split('-')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "df =df.explode('City')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[:,'City'] =df.loc[:,'City'].str.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[:,'State'] =df.loc[:,'State'].str.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('rent_cleaned.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "      Unnamed: 0                           City State  Rent\n",
       "0              0                        Abilene    TX  1028\n",
       "1              1                      Aguadilla    PR   472\n",
       "2              1                        Isabela    PR   472\n",
       "3              2               Utuado Municipio    PR   444\n",
       "4              3                          Akron    OH   911\n",
       "...          ...                            ...   ...   ...\n",
       "2826        2592       Northern Mariana Islands    MP   826\n",
       "2827        2593  Puerto Rico HUD Nonmetro Area    PR   450\n",
       "2828        2594               St. Croix Island    VI  1154\n",
       "2829        2595                St. John Island    VI  1812\n",
       "2830        2596              St. Thomas Island    VI  1307\n",
       "\n",
       "[2831 rows x 4 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>City</th>\n      <th>State</th>\n      <th>Rent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>Abilene</td>\n      <td>TX</td>\n      <td>1028</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Aguadilla</td>\n      <td>PR</td>\n      <td>472</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>Isabela</td>\n      <td>PR</td>\n      <td>472</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>Utuado Municipio</td>\n      <td>PR</td>\n      <td>444</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>Akron</td>\n      <td>OH</td>\n      <td>911</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2826</th>\n      <td>2592</td>\n      <td>Northern Mariana Islands</td>\n      <td>MP</td>\n      <td>826</td>\n    </tr>\n    <tr>\n      <th>2827</th>\n      <td>2593</td>\n      <td>Puerto Rico HUD Nonmetro Area</td>\n      <td>PR</td>\n      <td>450</td>\n    </tr>\n    <tr>\n      <th>2828</th>\n      <td>2594</td>\n      <td>St. Croix Island</td>\n      <td>VI</td>\n      <td>1154</td>\n    </tr>\n    <tr>\n      <th>2829</th>\n      <td>2595</td>\n      <td>St. John Island</td>\n      <td>VI</td>\n      <td>1812</td>\n    </tr>\n    <tr>\n      <th>2830</th>\n      <td>2596</td>\n      <td>St. Thomas Island</td>\n      <td>VI</td>\n      <td>1307</td>\n    </tr>\n  </tbody>\n</table>\n<p>2831 rows Ã— 4 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 127
    }
   ],
   "source": [
    "pd.read_csv('rent_cleaned.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}